[build-system]
requires = ["setuptools>=80.9.0", "wheel", "cffi>=1.15.1"]
build-backend = "setuptools.build_meta"

[project]
name = "zlmdb"
version = "25.10.1"
description = "Object-relational zero-copy in-memory database layer for LMDB"
readme = "README.rst"
requires-python = ">=3.9"
license = "MIT"
# Twine 6.2 validator (via pkginfo) still flags license-files as "unrecognized or malformed",
# because it only understands the old-style License: field (Core Metadata 2.3).
# Rely on modern setuptools (80.9.0+) which automatically discovers LICENSE* files at the root.
# license-files = ["LICENSE"]
authors = [
    {name = "typedef int GmbH", email = "contact@typedefint.eu"}
]
keywords = ["zlmdb", "lmdb", "database", "key-value", "embedded", "zero-copy", "flatbuffers", "cbor", "wamp", "crossbar"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "cffi>=1.15.1",
    "setuptools>=40.8.0",  # Required by CFFI's ffi.verify() on Python 3.12+
    "cbor2>=5.4.6",
    "click>=8.1.3",
    "flatbuffers>=23.1.4",
    # lmdb is now vendored - no external dependency needed
    "pynacl>=1.5.0",
    "pyyaml>=6.0",
    "txaio>=23.1.1",
    "numpy>=1.24.1",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "build>=1.0.0",
    "wheel>=0.36.2",
    "pytest>=3.4.2",
    "pytest-runner>=2.11.1",
    "twisted>=20.3.0",  # Required for running tests that use txaio with Twisted
    "sphinx>=1.7.1",
    "sphinx-rtd-theme>=0.1.9",
    "sphinxcontrib-spelling>=7.0.0",  # Spell checking for documentation
    "sphinxcontrib-images>=0.9.0",  # Image directives for Sphinx
    "sphinx-autoapi>=2.0.0",  # Automatic API documentation generation
    "pyenchant>=3.0.0",  # Required by sphinxcontrib-spelling
    "twine>=3.3.0",
    "ruff>=0.1.0",  # Fast Python linter and formatter (replaces flake8/black/yapf)
    "mypy>=1.0.0",  # Static type checker
    "types-PyYAML>=6.0.0",  # Type stubs for PyYAML
    "types-cffi>=1.0.0",  # Type stubs for cffi
    "coverage>=5.0.0",
]

[project.scripts]
zlmdb = "zlmdb.cli:main"

[project.urls]
Homepage = "https://github.com/crossbario/zlmdb"
Documentation = "https://zlmdb.readthedocs.io"
Repository = "https://github.com/crossbario/zlmdb"
Changelog = "https://github.com/crossbario/zlmdb/blob/master/docs/changelog.rst"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["zlmdb*", "lmdb*", "flatbuffers*"]
exclude = ["tests*", "lmdb-upstream*", "lmdb-patches*", "deps*", ".ai*", ".cicd*"]

[tool.setuptools.package-data]
lmdb = ["*.py"]
zlmdb = ["py.typed"]

# Configure build to run our custom LMDB patch/build script
[tool.setuptools.cmdclass]
# Note: build_lmdb.py will be invoked automatically during wheel/sdist build
# -----------------------------------------------------------------------------
# Ruff Configuration
# -----------------------------------------------------------------------------

[tool.ruff]
# Same as Black
line-length = 88
indent-width = 4

target-version = "py39"  # Minimum supported Python version

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default
select = ["E4", "E7", "E9", "F"]

# --- Files and Directories to Ignore ---
exclude = [
    ".tox",
    ".git",
    "__pycache__",
    "flatbuffers/*",
    "lmdb/*",  # Vendored LMDB bindings
    "zlmdb/flatbuffers/*",  # Auto-generated flatbuffers code
    "zlmdb/tests/MNodeLog.py",  # Auto-generated test file
]

# --- Violations to Ignore ---
# Technical debt list - aim to remove codes over time
ignore = [
    "E275",  # missing whitespace after keyword
    "F401",  # imported but unused
    "E402",  # module level import not at top of file
    "F403",  # unable to detect undefined names
    "F405",  # may be undefined, or defined from star imports
    "E501",  # line too long (handled by formatter)
    "F706",  # return statement outside of a function/method
    "E713",  # test for membership should be `not in`
    "E721",  # do not compare types, use isinstance()
    "E722",  # do not use bare except
    "E741",  # ambiguous variable name
    "F811",  # redefinition of unused
    "F821",  # undefined name
    "F841",  # local variable is assigned to but never used
]

# Allow fix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]

# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces, rather than tabs
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings
docstring-code-format = false
