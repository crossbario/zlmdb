name: main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache

jobs:
  check:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install OS package dependencies
      run: |
        sudo apt update
        sudo apt install libenchant-2-dev libbz2-dev libsnappy-dev libunwind-dev

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        architecture: 'x64'

    - name: Install Just
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Install uv
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source $HOME/.cargo/env
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Setup uv cache
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: uv-cache-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          uv-cache-${{ runner.os }}-

    - name: Install zlmdb with dev tools
      run: |
        just install-dev
        just install-tools

    - name: Run Ruff format check
      run: just check-format

    - name: Run MyPy type checking
      run: just check-typing

  test:
    env:
      CB_FULLTESTS: 1

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: ['3.9', '3.11', '3.12', 'pypy-3.9']

    continue-on-error: false

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # Install OS packages, as we install Python packages from source:
    # libenchant-dev: needed for pyenchant, needed for sphinx-spellcheck
    # libbz2-dev, libsnappy-dev: needed for compression
    # libunwind-dev: needed for vmprof
    - name: Install OS package dependencies
      run: |
        sudo apt update
        sudo apt install build-essential libssl-dev libffi-dev libunwind-dev \
          libreadline-dev zlib1g-dev libbz2-dev libsqlite3-dev libncurses5-dev \
          libsnappy-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Just
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Install uv
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source $HOME/.cargo/env
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Setup uv cache
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: uv-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          uv-cache-${{ runner.os }}-${{ matrix.python-version }}-
          uv-cache-${{ runner.os }}-

    - name: Install zlmdb
      run: |
        just install-dev

    - name: Run unit tests (PyTest)
      run: |
        just test-quick

  docs:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install OS package dependencies
      run: |
        sudo apt update
        sudo apt install libenchant-2-dev libbz2-dev libsnappy-dev libunwind-dev

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'

    - name: Install Just
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Install uv
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source $HOME/.cargo/env
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Setup uv cache
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: uv-cache-${{ runner.os }}-docs-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          uv-cache-${{ runner.os }}-docs-
          uv-cache-${{ runner.os }}-

    - name: Install zlmdb with dev tools
      run: |
        just install-dev
        just install-tools

    - name: Build documentation with Sphinx
      run: just docs
